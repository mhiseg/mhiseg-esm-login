name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types:
      - created

env:
<<<<<<< HEAD
  ESM_NAME: "@openmrs/esm-login-app"
  JS_NAME: "openmrs-esm-login-app.js"
=======
  ESM_NAME: "@openmrs/esm-template-app"
  JS_NAME: "openmrs-esm-template-app.js"
>>>>>>> fix the module to watch it

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
<<<<<<< HEAD
          node-version: "14.x"
      - run: npm install
      - run: npm run lint
      - run: npm run coverage
      - run: npm run typescript
      - run: npm run build --if-present
=======
          node-version: "16.x"
      - run: yarn
      - run: yarn lint
      - run: yarn coverage
      - run: yarn typescript
      - run: yarn build
>>>>>>> fix the module to watch it
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

<<<<<<< HEAD
  deploy:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}
          mv dist/*.* dist/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/
      - name: Publish to Digital Ocean
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --cache-control "max-age=31536000"
        env:
          AWS_S3_BUCKET: ${{ secrets.DIGITAL_OCEAN_SPACES_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.DIGITAL_OCEAN_SPACES_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DIGITAL_OCEAN_SPACES_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.DIGITAL_OCEAN_SPACES_ENDPOINT }}
          SOURCE_DIR: "dist"
      - name: Update Importmap
        uses: fjogeleit/http-request-action@master
        with:
          url: http://${{ secrets.DEPLOYER_HOST }}/services?env=prod
          method: "PATCH"
          username: ${{ secrets.DEPLOYER_USERNAME }}
          password: ${{ secrets.DEPLOYER_PASSWORD }}
          data: '{ "service":"${{ env.ESM_NAME }}","url":"https://spa-modules.nyc3.digitaloceanspaces.com/${{ env.ESM_NAME }}/${{ env.TIMESTAMP }}_${{ github.sha }}/${{ env.JS_NAME }}" }'
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'

=======
>>>>>>> fix the module to watch it
  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
<<<<<<< HEAD
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm install
      - run: sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.${{ github.run_number }}/" 'package.json'
      - run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
=======
      - run: echo "Uncomment the lines below and delete this one."
      # - uses: actions/checkout@v2
      # - name: Download Artifacts
      #   uses: actions/download-artifact@v2
      # - name: Use Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "16.x"
      #     registry-url: "https://registry.npmjs.org"
      # - run: npm install
      # - run: sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.${{ github.run_number }}/" 'package.json'
      # - run: npm publish --access public --tag next
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
>>>>>>> fix the module to watch it

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
<<<<<<< HEAD
          node-version: "14.x"
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm publish --access public
=======
          node-version: "16.x"
          registry-url: 'https://registry.npmjs.org'
      - run: yarn
      - run: yarn publish --access public
>>>>>>> fix the module to watch it
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
